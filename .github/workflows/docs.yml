name: Deploy Documentation to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'project-docs/**'
  pull_request:
    branches:
      - main
    paths:
      - 'project-docs/**'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./project-docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git-revision-date-localized plugin

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build documentation
        run: |
          mkdocs build --clean --strict
        env:
          SITE_URL: ${{ steps.pages.outputs.base_url }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./project-docs/site

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Docker build and test job
  docker-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./project-docs
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t mkdocs-test .

      - name: Test Docker container
        run: |
          # Start container in background
          docker run -d --name mkdocs-test -p 8000:8000 mkdocs-test
          
          # Wait for container to start
          sleep 10
          
          # Test if documentation is accessible
          curl -f http://localhost:8000 || exit 1
          
          # Stop container
          docker stop mkdocs-test
          docker rm mkdocs-test

      - name: Test Docker Compose
        run: |
          # Test build profile
          docker-compose --profile build up mkdocs-build
          
          # Check if site directory was created
          test -d site || exit 1
          
          # Test if index.html exists
          test -f site/index.html || exit 1